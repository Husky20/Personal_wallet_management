<?php

namespace Container835hLc0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPhpdoc_Transform_PipelineService extends phpDocumentor_KernelProdContainer
{
    /*
     * Gets the private 'phpdoc.transform.pipeline' shared service.
     *
     * @return \League\Pipeline\Pipeline
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/StageInterface.php';
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/PipelineInterface.php';
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/Pipeline.php';
        include_once \dirname(__DIR__, 4).'/src/phpDocumentor/Pipeline/PipelineFactory.php';

        return $container->privates['phpdoc.transform.pipeline'] = \phpDocumentor\Pipeline\PipelineFactory::create(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\LoadProjectDescriptorFromCache'] ?? $container->load('getLoadProjectDescriptorFromCacheService'));
            yield 1 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\LoadGuidesFromCache'] ?? $container->load('getLoadGuidesFromCacheService'));
            yield 2 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Transform'] ?? $container->load('getTransformService'));
        }, 3));
    }
}
