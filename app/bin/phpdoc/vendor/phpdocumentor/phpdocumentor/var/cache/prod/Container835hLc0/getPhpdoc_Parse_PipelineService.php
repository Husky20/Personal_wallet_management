<?php

namespace Container835hLc0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPhpdoc_Parse_PipelineService extends phpDocumentor_KernelProdContainer
{
    /*
     * Gets the private 'phpdoc.parse.pipeline' shared service.
     *
     * @return \League\Pipeline\Pipeline
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/StageInterface.php';
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/PipelineInterface.php';
        include_once \dirname(__DIR__, 6).'/league/pipeline/src/Pipeline.php';
        include_once \dirname(__DIR__, 4).'/src/phpDocumentor/Pipeline/PipelineFactory.php';

        return $container->privates['phpdoc.parse.pipeline'] = \phpDocumentor\Pipeline\PipelineFactory::create(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Parser\\TransformToParserPayload'] ?? ($container->privates['phpDocumentor\\Pipeline\\Stage\\Parser\\TransformToParserPayload'] = new \phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload()));
            yield 1 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Parser\\CollectFiles'] ?? $container->load('getCollectFilesService'));
            yield 2 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\GarbageCollectCache'] ?? $container->load('getGarbageCollectCacheService'));
            yield 3 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\LoadProjectDescriptorFromCache'] ?? $container->load('getLoadProjectDescriptorFromCacheService'));
            yield 4 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\LoadGuidesFromCache'] ?? $container->load('getLoadGuidesFromCacheService'));
            yield 5 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Parser\\ParseFiles'] ?? $container->load('getParseFilesService'));
            yield 6 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Parser\\ParseGuides'] ?? $container->load('getParseGuidesService'));
            yield 7 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\StoreProjectDescriptorToCache'] ?? $container->load('getStoreProjectDescriptorToCacheService'));
            yield 8 => ($container->privates['phpDocumentor\\Pipeline\\Stage\\Cache\\StoreGuidesToCache'] ?? $container->load('getStoreGuidesToCacheService'));
        }, 9));
    }
}
